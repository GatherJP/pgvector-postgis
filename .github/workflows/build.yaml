name: build and push

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        id: lowercase
        run: |
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
           echo "REPO=$REPO" >> $GITHUB_ENV

      - name: Get current version
        id: get_version
        run: |
          # Get the latest tag
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag: $latest_tag"

          # Extract the patch version and increment it
          version_regex="^v([0-9]+)\.([0-9]+)\.([0-9]+)$"
          if [[ "$latest_tag" =~ $version_regex ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
            new_patch=$((patch + 1))
            new_tag="v${major}.${minor}.${new_patch}"
            echo "New tag: $new_tag"
            echo "new_tag=$new_tag" >> $GITHUB_ENV
          else
            echo "Invalid version format in the latest tag."
            exit 1
          fi

      - name: Create new tag
        if: github.event.pull_request.merged == true
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Create and push the new tag
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{env.REGISTRY}}/${{ env.REPO }}:${{ env.new_tag }}
            ${{env.REGISTRY}}/${{ env.REPO }}:latest
